[versions]
compile-sdk = "36"
target-sdk = "36"
min-sdk = "24"

agp = "8.13.0"
kotlin = "2.2.20"

android-core-ktx = "1.17.0"
appcompat = "1.7.1"
lifecycle = "2.9.4"
activity-compose = "1.11.0"

compose-multiplatform = "1.9.0"
compose-multiplatform-material3 = "1.8.2"
ui-desktop = "1.7.0"

junit4 = "4.13.2"
junit5 = "6.0.0"

test-ext-junit = "1.3.0"
test-espresso = "3.7.0"

leakcanary = "2.14"

datastore = "1.1.7"
kotlinx_serialization = "1.9.0"

coroutines = "1.10.2"

spotless = "8.0.0"
ktlint-core = "1.7.1"

[libraries]
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "android-core-ktx" }
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }

androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
lifecycle-multiplatform-viewmodel-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
lifecycle-multiplatform-runtime-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycle" }

activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activity-compose" }

compose-multiplatform-runtime = { module = "org.jetbrains.compose.runtime:runtime", version.ref = "compose-multiplatform" }
compose-multiplatform-ui = { module = "org.jetbrains.compose.ui:ui", version.ref = "compose-multiplatform" }
compose-multiplatform-ui-graphics = { module = "org.jetbrains.compose.ui:ui-graphics", version.ref = "compose-multiplatform" }
compose-multiplatform-ui-tooling-preview = { module = "org.jetbrains.compose.ui:ui-tooling-preview", version.ref = "compose-multiplatform" }
compose-multiplatform-material3 = { module = "org.jetbrains.compose.material3:material3", version.ref = "compose-multiplatform-material3" }
compose-multiplatform-material-icons-core = { module = "androidx.compose.material:material-icons-core", version = "1.7.8" }
compose-multiplatform-material-icons-extended = { module = "androidx.compose.material:material-icons-extended", version = "1.7.8" }

compose-ui-desktop = { group = "androidx.compose.ui", name = "ui-desktop", version.ref = "ui-desktop" }

junit4 = { module = "junit:junit", version.ref = "junit4" }
junit5 = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit5" }
androidx-test-junit = { module = "androidx.test.ext:junit", version.ref = "test-ext-junit" }
androidx-test-espresso = { module = "androidx.test.espresso:espresso-core", version.ref = "test-espresso" }

compose-multiplatform-ui-test-junit4 = { module = "org.jetbrains.compose.ui:ui-test-junit4", version.ref = "compose-multiplatform" }
compose-multiplatform-ui-tooling = { module = "org.jetbrains.compose.ui:ui-tooling", version.ref = "compose-multiplatform" }
compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "compose-multiplatform" }


leak-canary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakcanary" }

datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }
datastore-preferences-core = { module = "androidx.datastore:datastore-preferences-core", version.ref = "datastore" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx_serialization" }

coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }

ktlint-core = { module = "com.pinterest.ktlint:ktlint-cli", version.ref = "ktlint-core" }

[plugins]
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
agp = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }

spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }

[bundles]
compose = [
    "compose-multiplatform-ui",
    "compose-multiplatform-ui-graphics",
    "compose-multiplatform-ui-tooling-preview",
    "compose-multiplatform-material3",
    "compose-multiplatform-material-icons-core",
    "compose-multiplatform-material-icons-extended"]
library-compose = [
    "compose-multiplatform-runtime",
    "lifecycle-multiplatform-runtime-compose"
]
